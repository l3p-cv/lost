image: docker:20.10.18
services:
  - docker:20.10.18-dind

stages:
  - build
  - test
  - release

variables:
  LOST_TEST_FRONTEND_IMAGE: $CI_REGISTRY_TEST_IMAGE/frontend:$CI_PIPELINE_IID
  LOST_TEST_BACKEND_IMAGE: $CI_REGISTRY_TEST_IMAGE/backend:$CI_PIPELINE_IID
  # LOST_CI_REGISTRY_BASE_IMAGE: $CI_REGISTRY_BASE_IMAGE:3.15
  LOST_PROD_FRONTEND_IMAGE: $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_TAG
  LOST_PROD_BACKEND_IMAGE: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_TAG
  LOST_VERSION: $CI_PIPELINE_ID

before_script:
  - apk add --update nodejs npm
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

# build-lost-base:
#   stage: build-base
#   script:
#     - docker build -t $LOST_CI_REGISTRY_BASE_IMAGE -f docker/lost-base/Dockerfile .
#     - docker push $LOST_CI_REGISTRY_BASE_IMAGE
#   only:
#     variables:
#       - $CI_COMMIT_MESSAGE =~ /lost-base/

# build-lost:
#   stage: build-lost
#   script:
#     - docker build --build-arg LOST_VERSION=${CI_COMMIT_TAG} --build-arg base_image=$LOST_CI_REGISTRY_BASE_IMAGE --pull -t $LOST_CI_REGISTRY_TEST_IMAGE -f docker/lost/Dockerfile .
#     - docker push $CI_REGISTRY_TEST_IMAGE/frontend:$CI_PIPELINE_IID

build-frontend:
  stage: build
  script:
    - docker build -t $LOST_TEST_FRONTEND_IMAGE -f frontend/Dockerfile frontend
    - docker push $LOST_TEST_FRONTEND_IMAGE

build-backend:
  stage: build
  script:
    - docker build -t $LOST_TEST_BACKEND_IMAGE --build-arg LOST_VERSION=${CI_COMMIT_TAG} -f backend/Dockerfile backend
    - docker push $LOST_TEST_BACKEND_IMAGE

test-lost:
  stage: test
  image: $LOST_TEST_BACKEND_IMAGE
  script:
    - bash /pytest.sh

release-frontend:
  stage: release
  needs: ['test-lost']
  script:
    - docker pull $LOST_TEST_FRONTEND_IMAGE
    - docker tag $LOST_TEST_FRONTEND_IMAGE $LOST_PROD_FRONTEND_IMAGE
    - docker push $LOST_PROD_FRONTEND_IMAGE
  only:
    - tags

release-backend:
  stage: release
  needs: ['test-lost']
  script:
    - docker pull $LOST_TEST_BACKEND_IMAGE
    - docker tag $LOST_TEST_BACKEND_IMAGE $LOST_PROD_BACKEND_IMAGE
    - docker push $LOST_PROD_BACKEND_IMAGE
  only:
    - tags
