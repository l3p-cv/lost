image: docker:20.10.18
services:
  - docker:20.10.18-dind

stages:
  - build-lost-base
  - build-lost
  - test-lost
  - release-lost

variables:
  LOST_CI_REGISTRY_BASE_IMAGE: $CI_REGISTRY_BASE_IMAGE:3.16
  LOST_CI_REGISTRY_TEST_IMAGE: $CI_REGISTRY_TEST_IMAGE:$CI_PIPELINE_ID
  LOST_CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  LOST_VERSION: $CI_PIPELINE_ID

before_script:
  - apk add --update nodejs npm
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build-lost-base:
  stage: build-lost-base
  script:
    - docker build -t $LOST_CI_REGISTRY_BASE_IMAGE -f docker/lost-base/Dockerfile .
    - docker push $LOST_CI_REGISTRY_BASE_IMAGE
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-base/

build-lost:
  stage: build-lost
  script:
    - docker build --build-arg LOST_VERSION=${CI_COMMIT_TAG} --build-arg base_image=$LOST_CI_REGISTRY_BASE_IMAGE --pull -t $LOST_CI_REGISTRY_TEST_IMAGE -f docker/lost/Dockerfile .
    - docker push $LOST_CI_REGISTRY_TEST_IMAGE

test-lost:
  stage: test-lost
  before_script:
    - apk add --no-cache --quiet py-pip
    - pip install --quiet docker-compose~=1.23.0
  script:
    - cd docker/compose && docker-compose run -e LOST_VERSION=$LOST_VERSION lost bash /pytest.sh

release-lost:
  stage: release-lost
  script:
    - docker pull $LOST_CI_REGISTRY_TEST_IMAGE
    - docker tag $LOST_CI_REGISTRY_TEST_IMAGE $LOST_CI_REGISTRY_IMAGE
    - docker push $LOST_CI_REGISTRY_IMAGE
  only:
    - tags
